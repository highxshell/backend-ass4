<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Cryptocurrency Page</title>
    <!-- Include necessary libraries -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
    />
    <style>
      .footer {
        position: fixed;
        bottom: 0;
        height: 7.5%;
        width: 100%;
        background-color: #f8f9fa;
        text-align: center;
        padding: 10px;
      }
      .navbar {
        overflow: hidden;
        background-color: #333;
      }

      .navbar a {
        float: left;
        display: block;
        color: #f2f2f2;
        text-align: center;
        padding: 14px 20px;
        text-decoration: none;
        font-size: 18px;
      }

      .navbar a:hover {
        background-color: #ddd;
        color: black;
      }
      @media screen and (max-width: 600px) {
        .navbar a {
          float: none;
          display: block;
          text-align: left;
        }
      }
    </style>
  </head>
  <body>
    <div class="navbar">
      <a href="/">Login</a>
      <a href="/items">Main page</a>
      <a href="/crypto">CryptoGeckoAPI</a>
      <a href="/currency">Currency Rate API</a>
      <a href="/apod">NASA APOD API</a>
    </div>

    <div class="container mt-5">
      <div class="mt-3">
        <label for="languageSelect">Select Language:</label>
        <select class="form-control" id="languageSelect">
          <option value="en">English</option>
          <option value="ru">Russian</option>
        </select>
      </div>
      <h1 class="text-center mb-4" id="pageTitle">Cryptocurrency Chart</h1>
      <div class="row">
        <div class="col-md-4">
          <label for="cryptoInput" id="cryptoInputLabel"
            >Cryptocurrency Symbol:</label
          >
          <input
            type="text"
            class="form-control"
            id="cryptoInput"
            value="bitcoin"
          />
        </div>
        <div class="col-md-4">
          <label for="daysInput" id="daysInputLabel">Number of Days:</label>
          <input type="number" class="form-control" id="daysInput" value="7" />
        </div>
        <div class="col-md-4">
          <button class="btn btn-primary mt-4" id="fetchDataBtn">
            <span id="fetchDataBtnText">Fetch Data</span>
          </button>
        </div>
      </div>
      <canvas id="cryptoChart" width="400" height="200"></canvas>
    </div>

    <script>
      // Default language is English
      let currentLanguage = "en";

      // Language strings
      const languageStrings = {
        en: {
          pageTitle: "Cryptocurrency Chart",
          cryptoInputLabel: "Cryptocurrency Symbol:",
          daysInputLabel: "Number of Days:",
          fetchDataBtnText: "Fetch Data",
        },
        ru: {
          pageTitle: "График криптовалюты",
          cryptoInputLabel: "Символ криптовалюты:",
          daysInputLabel: "Количество дней:",
          fetchDataBtnText: "Получить данные",
        },
      };

      // Function to set language based on user selection
      function setLanguage(language) {
        currentLanguage = language;
        // Update text content based on selected language
        document.getElementById("pageTitle").textContent =
          languageStrings[language].pageTitle;
        document.getElementById("cryptoInputLabel").textContent =
          languageStrings[language].cryptoInputLabel;
        document.getElementById("daysInputLabel").textContent =
          languageStrings[language].daysInputLabel;
        document.getElementById("fetchDataBtnText").textContent =
          languageStrings[language].fetchDataBtnText;
      }

      // Event listener for language selection dropdown
      document
        .getElementById("languageSelect")
        .addEventListener("change", function (event) {
          setLanguage(event.target.value);
        });

      // Initial setup with default language
      setLanguage(currentLanguage);
      let myChart; // Declare myChart globally to keep track of the chart instance

      document
        .getElementById("fetchDataBtn")
        .addEventListener("click", fetchData);

      function fetchData() {
        const cryptoSymbol = document.getElementById("cryptoInput").value;
        const days = document.getElementById("daysInput").value;

        // Construct API URL based on user inputs
        const apiUrl = `https://api.coingecko.com/api/v3/coins/${cryptoSymbol}/market_chart?vs_currency=usd&days=${days}`;

        // Fetch cryptocurrency data from the CoinGecko API
        fetch(apiUrl)
          .then((response) => response.json())
          .then((data) => {
            // Extract relevant data for chart
            const prices = data.prices.map((price) => price[1]); // Extracting prices from response

            // If chart already exists, destroy it before creating a new one
            if (myChart) {
              myChart.destroy();
            }

            // Display data in a chart
            const ctx = document.getElementById("cryptoChart").getContext("2d");
            myChart = new Chart(ctx, {
              type: "line",
              data: {
                labels: Array.from({ length: prices.length }, (_, i) => i + 1), // Generating labels (days)
                datasets: [
                  {
                    label: `${cryptoSymbol.toUpperCase()} Prices (USD)`,
                    data: prices,
                    backgroundColor: "rgba(75, 192, 192, 0.2)",
                    borderColor: "rgba(75, 192, 192, 1)",
                    borderWidth: 1,
                  },
                ],
              },
              options: {
                scales: {
                  yAxes: [
                    {
                      ticks: {
                        beginAtZero: false,
                      },
                    },
                  ],
                },
              },
            });
          })
          .catch((error) =>
            console.error("Error fetching cryptocurrency data:", error)
          );
      }
    </script>
    <footer class="footer mt-5 bg-white">
      <p>Popov Artem | SE-2205</p>
    </footer>
  </body>
</html>
